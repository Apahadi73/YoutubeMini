{"version":3,"sources":["apis/youtube.js","actions/index.js","components/SearchBar.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","fetchYoutubeVideos","userInput","dispatch","getState","a","youtube","get","params","q","part","maxResults","type","key","response","payload","data","items","SearchBar","style","padding","onSubmit","event","preventDefault","className","width","placeholder","onKeyPress","searchInput","target","value","props","getUserInput","float","icon","faSearch","this","renderView","React","Component","connect","state","console","log","youtubeVideos","selectVideo","video","id","videoId","onClick","e","src","snippet","thumbnails","high","url","alt","description","title","VideoList","map","renderList","VideoDetail","selectedVideo","role","videoSrc","App","faArrowCircleUp","combineReducers","userSearchInput","action","reduxStore","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","store","document","querySelector"],"mappings":"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","file":"static/js/main.daa0dbdd.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3/\",\r\n});\r\n","//Action Creator\r\nimport youtube from \"../apis/youtube\";\r\n\r\nconst apiKey = \"AIzaSyCr68utaNgnuJ0j4t-uEiES8SnSqelsEpE\";\r\n\r\n//gets user input\r\nexport const getUserInput = (userInput) => {\r\n  return {\r\n    type: \"SET_USERSEARCHINPUT\",\r\n    payload: userInput,\r\n  };\r\n};\r\n\r\nexport const fetchYoutubeVideos = (userInput) => async (dispatch, getState) => {\r\n  const response = await youtube.get(\"/search\", {\r\n    params: {\r\n      q: userInput,\r\n      part: \"snippet\",\r\n      maxResults: 5,\r\n      type: \"video\",\r\n      key: apiKey,\r\n    },\r\n  });\r\n  await dispatch({ type: \"FETCH_POSTS\", payload: response.data.items });\r\n};\r\n\r\nexport const selectVideo = (video) => {\r\n  return {\r\n    type: \"SELECTED_VIDEO\",\r\n    payload: video,\r\n  };\r\n};\r\n","import React from \"react\";\r\n// get our fontawesome imports\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getUserInput, fetchYoutubeVideos } from \"../actions\";\r\n\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends React.Component {\r\n  renderView() {\r\n    return (\r\n      <div style={{ padding: 5 }}>\r\n        <form\r\n          onSubmit={(event) => {\r\n            event.preventDefault();\r\n          }}\r\n        >\r\n          <div className=\"input-group mb-3\" style={{ width: \"90%\" }}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              style={{ width: \"80%\" }}\r\n              placeholder=\"Type your search here...\"\r\n              onKeyPress={(event) => {\r\n                if (event.key === \"Enter\") {\r\n                  const searchInput = event.target.value;\r\n                  this.props.getUserInput(searchInput);\r\n                  this.props.fetchYoutubeVideos(searchInput);\r\n                }\r\n              }}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-info\"\r\n              style={{ float: \"left\" }}\r\n            >\r\n              <FontAwesomeIcon icon={faSearch} />\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return <div>{this.renderView()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return { userInput: state.userInput, youtubeVideos: state.youtubeVideos };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getUserInput, fetchYoutubeVideos })(\r\n  SearchBar\r\n);\r\n","import React from \"react\";\r\nimport \"./VideoItem.css\";\r\nimport { selectVideo } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst VideoItem = ({ video, selectVideo }) => {\r\n  if (!video) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div\r\n      className=\"card video-item\"\r\n      key={video.id.videoId}\r\n      onClick={(e) => selectVideo(video)}\r\n    >\r\n      <img\r\n        src={video.snippet.thumbnails.high.url}\r\n        className=\"card-img-top\"\r\n        alt={video.snippet.description}\r\n      />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{video.snippet.title}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { selectVideo })(VideoItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchYoutubeVideos } from \"../actions\";\r\nimport VideoItem from \"./VideoItem\";\r\n\r\nclass VideoList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchYoutubeVideos();\r\n  }\r\n\r\n  renderList() {\r\n    return this.props.youtubeVideos.map((video) => {\r\n      return (\r\n        <div key={video.id.videoId}>\r\n          <VideoItem video={video} />\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return <div>{this.renderList()}</div>;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return { youtubeVideos: state.youtubeVideos };\r\n};\r\nexport default connect(mapStateToProps, { fetchYoutubeVideos })(VideoList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./VideoDetail.css\";\r\n\r\nclass VideoDetail extends React.Component {\r\n  render() {\r\n    const video = this.props.selectedVideo;\r\n    if (!video) {\r\n      return (\r\n        <div className=\"iframeBox\">\r\n          <div className=\"spinner-border text-info \" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n    return (\r\n      <div>\r\n        <iframe className=\"iframeBox\" title=\"video player\" src={videoSrc} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { selectedVideo: state.selectedVideo };\r\n};\r\n\r\nexport default connect(mapStateToProps)(VideoDetail);\r\n","import React from \"react\";\r\nimport { faArrowCircleUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport SearchBar from \"./SearchBar\";\r\nimport VideoList from \"./VideoList\";\r\nimport VideoDetail from \"./VideoDetail\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div>\r\n            <FontAwesomeIcon icon={faArrowCircleUp} />\r\n            MiniYouTube\r\n          </div>\r\n        </nav>\r\n        <div className=\"container\">\r\n          <div>\r\n            <SearchBar />\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-8 col-lg-8\">\r\n              <VideoDetail />\r\n            </div>\r\n            <div className=\"col-4 col-lg-4\">\r\n              <VideoList />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\n//reducer that changes user search key in the redux store\r\nconst userInputReducer = (userSearchInput = null, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USERSEARCHINPUT\":\r\n      return action.payload;\r\n    default:\r\n      return userSearchInput;\r\n  }\r\n};\r\n\r\nconst youtubeVideosReducers = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_POSTS\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst selectedVideoReducers = (selectedVideo = null, action) => {\r\n  switch (action.type) {\r\n    case \"SELECTED_VIDEO\":\r\n      return action.payload;\r\n    default:\r\n      return selectedVideo;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  userInput: userInputReducer,\r\n  youtubeVideos: youtubeVideosReducers,\r\n  selectedVideo: selectedVideoReducers,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\nconst reduxStore = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={reduxStore}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}